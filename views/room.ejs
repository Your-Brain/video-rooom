<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Video Chat Room</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="/socket.io/socket.io.js"></script>
    <script src="https://unpkg.com/peerjs@1.3.1/dist/peerjs.min.js"></script>
</head>
<body class="bg-gray-900 flex items-center justify-center h-screen">
    <div class="bg-gray-800 p-8 rounded-lg shadow-lg text-center w-full max-w-2xl">
        <h1 class="text-2xl font-bold text-white mb-4">Room ID: <span id="room-id"></span></h1>
        <div id="video-grid" class="flex gap-4 justify-center flex-wrap"></div>
    </div>

    <script>
        const socket = io();
        const videoGrid = document.getElementById('video-grid');
        const roomId = "<%= roomId %>";
        document.getElementById('room-id').innerText = roomId;

        const myPeer = new Peer(undefined, {
            host: '/',
            port: '3001'
        });

        const myVideo = document.createElement('video');
        myVideo.muted = true;
        const peers = {};

        navigator.mediaDevices.getUserMedia({
            video: true,
            audio: true
        }).then(stream => {
            addVideoStream(myVideo, stream);

            myPeer.on('call', call => {
                call.answer(stream);
                const video = document.createElement('video');
                call.on('stream', userVideoStream => {
                    addVideoStream(video, userVideoStream);
                });
            });

            socket.on('user-connected', userId => {
                connectToNewUser(userId, stream);
            });
        });

        myPeer.on('open', id => {
            socket.emit('join-room', roomId, id);
        });

        function connectToNewUser(userId, stream) {
            const call = myPeer.call(userId, stream);
            const video = document.createElement('video');
            call.on('stream', userVideoStream => {
                addVideoStream(video, userVideoStream);
            });
            call.on('close', () => {
                video.remove();
            });
            peers[userId] = call;
        }

        function addVideoStream(video, stream) {
            video.srcObject = stream;
            video.addEventListener('loadedmetadata', () => {
                video.play();
            });
            videoGrid.append(video);
        }
    </script>
</body>
</html>
